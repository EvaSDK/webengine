from sjconf import *


class Plugin(PluginWithTemplate):

    VERSION = '@VERSION@'

    def template_path(self, file_path, confs_to_test):
        return self.sjconf.etc_dir + '/webengine/sjconf/templates/webengine/webengine.conf'

    def conf_types(self):
        return (
            ('webengine', 'authorized_mods', 'list'),
            ('webengine', 'enable_admin', 'bool'),
            ('webengine', 'debug', 'bool'),
            ('webengine', 'enable_i18n', 'bool'),
            ('webengine', 'enable_auth', 'bool'),
        )

    def conf_files_path(self):
        return (self.sjconf.etc_dir + '/webengine/webengine-conf.conf',)

    def services_to_restart(self):
        return ('apache2',)

    def template_conf(self, file_path):
        conf = self.conf_section_class()(self.conf['webengine'])
        for section in self.conf:
            if section.startswith('webengine:'):
                conf.update(dict(
                    ('%s_%s' % (section[10:], key), value)
                    for key, value in self.conf[section]
                ))
        return conf

    class ConfSection(Conf.ConfSection):

        def __getitem__(self, key):
            value = Conf.ConfSection.__getitem__(self, key)

            if  key == 'authorized_mods_list':
                return ', '.join(value)
            else:
                return value

